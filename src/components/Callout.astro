---
import Icon from './Icon.astro';
import { iconsPaths } from './iconsPaths';

type CalloutReturnTypes = () => {
    styles: string;
    icon: keyof typeof iconsPaths;
};
type CalloutTypes = {
    note: CalloutReturnTypes;
    warning: CalloutReturnTypes;
};

const calloutTypesClassNames: CalloutTypes = {
    note: () => ({
        styles: 'border-sky-600 bg-sky-600/20',
        icon: 'note-pencil'
    }),
    warning: () => ({
        styles: 'border-yellow-600 bg-yellow-600/20',
        icon: 'warning'
    })
} as const;

interface Props {
    title?: string;
    type?: keyof typeof calloutTypesClassNames;
}

const { title, type } = Astro.props;
const actualType = !type ? 'note' : type;
const actualTitle = !title ? actualType.charAt(0).toUpperCase() + actualType.slice(1) : title;

const calloutBaseStyles = 'w-full p-1.5 text-zinc-50 rounded-sm border-2';

const customCalloutData = calloutTypesClassNames[actualType]();
---

<aside class:list={[calloutBaseStyles, customCalloutData.styles]}>
    <div class="flex gap-2">
        <Icon icon={customCalloutData.icon} className="text-4xl" />
        <h6 class="text-xl self-center leading-tight font-sans font-medium sm:text-lg sm:leading-tight">{actualTitle}</h6>
    </div>
    <div class="px-8">
        <p><slot /></p>
    </div>
</aside>
